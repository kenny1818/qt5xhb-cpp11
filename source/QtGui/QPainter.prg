/*

  Qt5xHb/C++11 - Bindings libraries for Harbour/xHarbour and Qt Framework 5

  Copyright (C) 2021 Marcos Antonio Gambeta <marcosgambeta AT outlook DOT com>

*/

/*
  DO NOT EDIT THIS FILE - the content was created using a source code generator
*/

#include "hbclass.ch"

#ifndef QT5XHB_NO_REQUESTS
REQUEST QBRUSH
REQUEST QFONT
REQUEST QFONTINFO
REQUEST QFONTMETRICS
REQUEST QPAINTDEVICE
REQUEST QPAINTENGINE
REQUEST QPAINTERPATH
REQUEST QPEN
REQUEST QPOINT
REQUEST QRECT
REQUEST QRECTF
REQUEST QREGION
REQUEST QTRANSFORM
#endif

CLASS QPainter

   DATA pointer
   DATA self_destruction INIT .F.

   METHOD new
   METHOD delete
   METHOD background
   METHOD backgroundMode
   METHOD begin
   METHOD beginNativePainting
   METHOD boundingRect
   METHOD brush
   METHOD brushOrigin
   METHOD clipPath
   METHOD clipRegion
   METHOD combinedTransform
   METHOD compositionMode
   METHOD device
   METHOD deviceTransform
   METHOD drawArc
   METHOD drawChord
   METHOD drawConvexPolygon
   METHOD drawEllipse
   METHOD drawImage
   METHOD drawLine
   METHOD drawLines
   METHOD drawPath
   METHOD drawPicture
   METHOD drawPie
   METHOD drawPixmap
   METHOD drawPoint
   METHOD drawPoints
   METHOD drawPolygon
   METHOD drawPolyline
   METHOD drawRect
   METHOD drawRects
   METHOD drawRoundedRect
   METHOD drawStaticText
   METHOD drawText
   METHOD drawTiledPixmap
   METHOD end
   METHOD endNativePainting
   METHOD eraseRect
   METHOD fillPath
   METHOD fillRect
   METHOD font
   METHOD fontInfo
   METHOD fontMetrics
   METHOD hasClipping
   METHOD isActive
   METHOD layoutDirection
   METHOD opacity
   METHOD paintEngine
   METHOD pen
   METHOD renderHints
   METHOD resetTransform
   METHOD restore
   METHOD rotate
   METHOD save
   METHOD scale
   METHOD setBackground
   METHOD setBackgroundMode
   METHOD setBrush
   METHOD setBrushOrigin
   METHOD setClipPath
   METHOD setClipRect
   METHOD setClipRegion
   METHOD setClipping
   METHOD setCompositionMode
   METHOD setFont
   METHOD setLayoutDirection
   METHOD setOpacity
   METHOD setPen
   METHOD setRenderHint
   METHOD setRenderHints
   METHOD setTransform
   METHOD setViewTransformEnabled
   METHOD setViewport
   METHOD setWindow
   METHOD setWorldMatrixEnabled
   METHOD setWorldTransform
   METHOD shear
   METHOD strokePath
   METHOD testRenderHint
   METHOD transform
   METHOD translate
   METHOD viewTransformEnabled
   METHOD viewport
   METHOD window
   METHOD worldMatrixEnabled
   METHOD worldTransform

   METHOD newFrom
   METHOD newFromObject
   METHOD newFromPointer
   METHOD selfDestruction
   METHOD setSelfDestruction

   DESTRUCTOR destroyObject

END CLASS

PROCEDURE destroyObject() CLASS QPainter
   IF ::self_destruction
      ::delete()
   ENDIF
RETURN

#pragma BEGINDUMP

#include <QtGui/QPainterPath>

#include <QtCore/Qt>

#ifndef __XHARBOUR__
#include <QtGui/QPainter>
#endif

#include "qt5xhb_common.h"
#include "qt5xhb_macros.h"
#include "qt5xhb_utils.h"

#ifdef __XHARBOUR__
#include <QtGui/QPainter>
#endif

/*
QPainter()
*/
void QPainter_new1()
{
  auto obj = new QPainter();
  Qt5xHb::returnNewObject( obj, true );
}

/*
QPainter( QPaintDevice * device )
*/
void QPainter_new2()
{
  auto obj = new QPainter( PQPAINTDEVICE( 1 ) );
  Qt5xHb::returnNewObject( obj, true );
}

HB_FUNC_STATIC( QPAINTER_NEW )
{
  if( ISNUMPAR( 0 ) )
  {
    QPainter_new1();
  }
  else if( ISNUMPAR( 1 ) && HB_ISOBJECT( 1 ) ) // TODO: implementar ISQPAINTDEVICE
  {
    QPainter_new2();
  }
  else
  {
    hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
  }
}

HB_FUNC_STATIC( QPAINTER_DELETE )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    delete obj;
    obj = nullptr;
    PHB_ITEM self = hb_stackSelfItem();
    PHB_ITEM ptr = hb_itemPutPtr( nullptr, nullptr );
    hb_objSendMsg( self, "_pointer", 1, ptr );
    hb_itemRelease( ptr );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
const QBrush & background() const
*/
HB_FUNC_STATIC( QPAINTER_BACKGROUND )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 0 ) )
    {
#endif
      const QBrush * ptr = &obj->background();
      Qt5xHb::createReturnClass( ptr, "QBRUSH", false );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }
}

/*
Qt::BGMode backgroundMode() const
*/
HB_FUNC_STATIC( QPAINTER_BACKGROUNDMODE )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 0 ) )
    {
#endif
      RENUM( obj->backgroundMode() );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }
}

/*
bool begin( QPaintDevice * device )
*/
HB_FUNC_STATIC( QPAINTER_BEGIN )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 1 ) && ISQPAINTDEVICE( 1 ) )
    {
#endif
      RBOOL( obj->begin( PQPAINTDEVICE( 1 ) ) );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }
}

/*
void beginNativePainting()
*/
HB_FUNC_STATIC( QPAINTER_BEGINNATIVEPAINTING )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 0 ) )
    {
#endif
      obj->beginNativePainting();
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
QRectF boundingRect( const QRectF & rectangle, int flags, const QString & text )
*/
void QPainter_boundingRect1()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    auto ptr = new QRectF( obj->boundingRect( *PQRECTF( 1 ), PINT( 2 ), PQSTRING( 3 ) ) );
    Qt5xHb::createReturnClass( ptr, "QRECTF", true );
  }
}

/*
QRect boundingRect( const QRect & rectangle, int flags, const QString & text )
*/
void QPainter_boundingRect2()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    auto ptr = new QRect( obj->boundingRect( *PQRECT( 1 ), PINT( 2 ), PQSTRING( 3 ) ) );
    Qt5xHb::createReturnClass( ptr, "QRECT", true );
  }
}

/*
QRect boundingRect( int x, int y, int w, int h, int flags, const QString & text )
*/
void QPainter_boundingRect3()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    auto ptr = new QRect( obj->boundingRect( PINT( 1 ), PINT( 2 ), PINT( 3 ), PINT( 4 ), PINT( 5 ), PQSTRING( 6 ) ) );
    Qt5xHb::createReturnClass( ptr, "QRECT", true );
  }
}

/*
QRectF boundingRect( const QRectF & rectangle, const QString & text, const QTextOption & option = QTextOption() )
*/
void QPainter_boundingRect4()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    auto ptr = new QRectF( obj->boundingRect( *PQRECTF( 1 ), PQSTRING( 2 ), HB_ISNIL( 3 ) ? QTextOption() : *static_cast< QTextOption * >( Qt5xHb::itemGetPtr( 3 ) ) ) );
    Qt5xHb::createReturnClass( ptr, "QRECTF", true );
  }
}

HB_FUNC_STATIC( QPAINTER_BOUNDINGRECT )
{
  if( ISNUMPAR( 3 ) && ISQRECTF( 1 ) && HB_ISNUM( 2 ) && HB_ISCHAR( 3 ) )
  {
    QPainter_boundingRect1();
  }
  else if( ISNUMPAR( 3 ) && ISQRECT( 1 ) && HB_ISNUM( 2 ) && HB_ISCHAR( 3 ) )
  {
    QPainter_boundingRect2();
  }
  else if( ISNUMPAR( 6 ) && HB_ISNUM( 1 ) && HB_ISNUM( 2 ) && HB_ISNUM( 3 ) && HB_ISNUM( 4 ) && HB_ISNUM( 5 ) && HB_ISCHAR( 6 ) )
  {
    QPainter_boundingRect3();
  }
  else if( ISBETWEEN( 2, 3 ) && ISQRECTF( 1 ) && HB_ISCHAR( 2 ) && ( ISQTEXTOPTION( 3 ) || HB_ISNIL( 3 ) ) )
  {
    QPainter_boundingRect4();
  }
  else
  {
    hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
  }
}

/*
const QBrush & brush() const
*/
HB_FUNC_STATIC( QPAINTER_BRUSH )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 0 ) )
    {
#endif
      const QBrush * ptr = &obj->brush();
      Qt5xHb::createReturnClass( ptr, "QBRUSH", false );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }
}

/*
QPoint brushOrigin() const
*/
HB_FUNC_STATIC( QPAINTER_BRUSHORIGIN )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 0 ) )
    {
#endif
      auto ptr = new QPoint( obj->brushOrigin() );
      Qt5xHb::createReturnClass( ptr, "QPOINT", true );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }
}

/*
QPainterPath clipPath() const
*/
HB_FUNC_STATIC( QPAINTER_CLIPPATH )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 0 ) )
    {
#endif
      auto ptr = new QPainterPath( obj->clipPath() );
      Qt5xHb::createReturnClass( ptr, "QPAINTERPATH", true );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }
}

/*
QRegion clipRegion() const
*/
HB_FUNC_STATIC( QPAINTER_CLIPREGION )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 0 ) )
    {
#endif
      auto ptr = new QRegion( obj->clipRegion() );
      Qt5xHb::createReturnClass( ptr, "QREGION", true );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }
}

/*
QTransform combinedTransform() const
*/
HB_FUNC_STATIC( QPAINTER_COMBINEDTRANSFORM )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 0 ) )
    {
#endif
      auto ptr = new QTransform( obj->combinedTransform() );
      Qt5xHb::createReturnClass( ptr, "QTRANSFORM", true );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }
}

/*
QPainter::CompositionMode compositionMode() const
*/
HB_FUNC_STATIC( QPAINTER_COMPOSITIONMODE )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 0 ) )
    {
#endif
      RENUM( obj->compositionMode() );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }
}

/*
QPaintDevice * device() const
*/
HB_FUNC_STATIC( QPAINTER_DEVICE )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 0 ) )
    {
#endif
      QPaintDevice * ptr = obj->device();
      Qt5xHb::createReturnClass( ptr, "QPAINTDEVICE", false );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }
}

/*
const QTransform & deviceTransform() const
*/
HB_FUNC_STATIC( QPAINTER_DEVICETRANSFORM )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 0 ) )
    {
#endif
      const QTransform * ptr = &obj->deviceTransform();
      Qt5xHb::createReturnClass( ptr, "QTRANSFORM", false );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }
}

/*
void drawArc( const QRectF & rectangle, int startAngle, int spanAngle )
*/
void QPainter_drawArc1()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawArc( *PQRECTF( 1 ), PINT( 2 ), PINT( 3 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawArc( const QRect & rectangle, int startAngle, int spanAngle )
*/
void QPainter_drawArc2()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawArc( *PQRECT( 1 ), PINT( 2 ), PINT( 3 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawArc( int x, int y, int width, int height, int startAngle, int spanAngle )
*/
void QPainter_drawArc3()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawArc( PINT( 1 ), PINT( 2 ), PINT( 3 ), PINT( 4 ), PINT( 5 ), PINT( 6 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

HB_FUNC_STATIC( QPAINTER_DRAWARC )
{
  if( ISNUMPAR( 3 ) && ISQRECTF( 1 ) && HB_ISNUM( 2 ) && HB_ISNUM( 3 ) )
  {
    QPainter_drawArc1();
  }
  else if( ISNUMPAR( 3 ) && ISQRECT( 1 ) && HB_ISNUM( 2 ) && HB_ISNUM( 3 ) )
  {
    QPainter_drawArc2();
  }
  else if( ISNUMPAR( 6 ) && HB_ISNUM( 1 ) && HB_ISNUM( 2 ) && HB_ISNUM( 3 ) && HB_ISNUM( 4 ) && HB_ISNUM( 5 ) && HB_ISNUM( 6 ) )
  {
    QPainter_drawArc3();
  }
  else
  {
    hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
  }
}

/*
void drawChord( const QRectF & rectangle, int startAngle, int spanAngle )
*/
void QPainter_drawChord1()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawChord( *PQRECTF( 1 ), PINT( 2 ), PINT( 3 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawChord( const QRect & rectangle, int startAngle, int spanAngle )
*/
void QPainter_drawChord2()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawChord( *PQRECT( 1 ), PINT( 2 ), PINT( 3 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawChord( int x, int y, int width, int height, int startAngle, int spanAngle )
*/
void QPainter_drawChord3()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawChord( PINT( 1 ), PINT( 2 ), PINT( 3 ), PINT( 4 ), PINT( 5 ), PINT( 6 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

HB_FUNC_STATIC( QPAINTER_DRAWCHORD )
{
  if( ISNUMPAR( 3 ) && ISQRECTF( 1 ) && HB_ISNUM( 2 ) && HB_ISNUM( 3 ) )
  {
    QPainter_drawChord1();
  }
  else if( ISNUMPAR( 3 ) && ISQRECT( 1 ) && HB_ISNUM( 2 ) && HB_ISNUM( 3 ) )
  {
    QPainter_drawChord2();
  }
  else if( ISNUMPAR( 6 ) && HB_ISNUM( 1 ) && HB_ISNUM( 2 ) && HB_ISNUM( 3 ) && HB_ISNUM( 4 ) && HB_ISNUM( 5 ) && HB_ISNUM( 6 ) )
  {
    QPainter_drawChord3();
  }
  else
  {
    hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
  }
}

/*
void drawConvexPolygon( const QPolygonF & polygon )
*/
void QPainter_drawConvexPolygon3()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawConvexPolygon( *PQPOLYGONF( 1 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawConvexPolygon( const QPolygon & polygon )
*/
void QPainter_drawConvexPolygon4()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawConvexPolygon( *PQPOLYGON( 1 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
[1]void drawConvexPolygon ( const QPointF * points, int pointCount )
[2]void drawConvexPolygon ( const QPoint * points, int pointCount )
[3]void drawConvexPolygon ( const QPolygonF & polygon )
[4]void drawConvexPolygon ( const QPolygon & polygon )
*/

HB_FUNC_STATIC( QPAINTER_DRAWCONVEXPOLYGON )
{
  if( ISNUMPAR( 1 ) && ISQPOLYGONF( 1 ) )
  {
    QPainter_drawConvexPolygon3();
  }
  else if( ISNUMPAR( 1 ) && ISQPOLYGON( 1 ) )
  {
    QPainter_drawConvexPolygon4();
  }
  else
  {
    hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
  }
}

/*
void drawEllipse( const QRectF & rectangle )
*/
void QPainter_drawEllipse1()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawEllipse( *PQRECTF( 1 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawEllipse( const QRect & rectangle )
*/
void QPainter_drawEllipse2()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawEllipse( *PQRECT( 1 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawEllipse( int x, int y, int width, int height )
*/
void QPainter_drawEllipse3()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawEllipse( PINT( 1 ), PINT( 2 ), PINT( 3 ), PINT( 4 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawEllipse( const QPointF & center, qreal rx, qreal ry )
*/
void QPainter_drawEllipse4()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawEllipse( *PQPOINTF( 1 ), PQREAL( 2 ), PQREAL( 3 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawEllipse( const QPoint & center, int rx, int ry )
*/
void QPainter_drawEllipse5()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawEllipse( *PQPOINT( 1 ), PINT( 2 ), PINT( 3 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

HB_FUNC_STATIC( QPAINTER_DRAWELLIPSE )
{
  if( ISNUMPAR( 1 ) && ISQRECTF( 1 ) )
  {
    QPainter_drawEllipse1();
  }
  else if( ISNUMPAR( 1 ) && ISQRECT( 1 ) )
  {
    QPainter_drawEllipse2();
  }
  else if( ISNUMPAR( 4 ) && HB_ISNUM( 1 ) && HB_ISNUM( 2 ) && HB_ISNUM( 3 ) && HB_ISNUM( 4 ) )
  {
    QPainter_drawEllipse3();
  }
  else if( ISNUMPAR( 3 ) && ISQPOINTF( 1 ) && HB_ISNUM( 2 ) && HB_ISNUM( 3 ) )
  {
    QPainter_drawEllipse4();
  }
  else if( ISNUMPAR( 3 ) && ISQPOINT( 1 ) && HB_ISNUM( 2 ) && HB_ISNUM( 3 ) )
  {
    QPainter_drawEllipse5();
  }
  else
  {
    hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
  }
}

/*
void drawImage( const QRectF & target, const QImage & image, const QRectF & source, Qt::ImageConversionFlags flags = Qt::AutoColor )
*/
void QPainter_drawImage1()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawImage( *PQRECTF( 1 ), *PQIMAGE( 2 ), *PQRECTF( 3 ), HB_ISNIL( 4 ) ? static_cast< Qt::ImageConversionFlags >( Qt::AutoColor ) : static_cast< Qt::ImageConversionFlags >( hb_parni( 4 ) ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawImage( const QRect & target, const QImage & image, const QRect & source, Qt::ImageConversionFlags flags = Qt::AutoColor )
*/
void QPainter_drawImage2()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawImage( *PQRECT( 1 ), *PQIMAGE( 2 ), *PQRECT( 3 ), HB_ISNIL( 4 ) ? static_cast< Qt::ImageConversionFlags >( Qt::AutoColor ) : static_cast< Qt::ImageConversionFlags >( hb_parni( 4 ) ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawImage( const QPointF & point, const QImage & image )
*/
void QPainter_drawImage3()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawImage( *PQPOINTF( 1 ), *PQIMAGE( 2 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawImage( const QPoint & point, const QImage & image )
*/
void QPainter_drawImage4()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawImage( *PQPOINT( 1 ), *PQIMAGE( 2 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawImage( const QPointF & point, const QImage & image, const QRectF & source, Qt::ImageConversionFlags flags = Qt::AutoColor )
*/
void QPainter_drawImage5()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawImage( *PQPOINTF( 1 ), *PQIMAGE( 2 ), *PQRECTF( 3 ), HB_ISNIL( 4 ) ? static_cast< Qt::ImageConversionFlags >( Qt::AutoColor ) : static_cast< Qt::ImageConversionFlags >( hb_parni( 4 ) ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawImage( const QPoint & point, const QImage & image, const QRect & source, Qt::ImageConversionFlags flags = Qt::AutoColor )
*/
void QPainter_drawImage6()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawImage( *PQPOINT( 1 ), *PQIMAGE( 2 ), *PQRECT( 3 ), HB_ISNIL( 4 ) ? static_cast< Qt::ImageConversionFlags >( Qt::AutoColor ) : static_cast< Qt::ImageConversionFlags >( hb_parni( 4 ) ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawImage( const QRectF & rectangle, const QImage & image )
*/
void QPainter_drawImage7()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawImage( *PQRECTF( 1 ), *PQIMAGE( 2 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawImage( const QRect & rectangle, const QImage & image )
*/
void QPainter_drawImage8()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawImage( *PQRECT( 1 ), *PQIMAGE( 2 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawImage( int x, int y, const QImage & image, int sx = 0, int sy = 0, int sw = -1, int sh = -1, Qt::ImageConversionFlags flags = Qt::AutoColor )
*/
void QPainter_drawImage9()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawImage( PINT( 1 ), PINT( 2 ), *PQIMAGE( 3 ), OPINT( 4, 0 ), OPINT( 5, 0 ), OPINT( 6, -1 ), OPINT( 7, -1 ), HB_ISNIL( 8 ) ? static_cast< Qt::ImageConversionFlags >( Qt::AutoColor ) : static_cast< Qt::ImageConversionFlags >( hb_parni( 8 ) ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

HB_FUNC_STATIC( QPAINTER_DRAWIMAGE )
{
  if( ISBETWEEN( 3, 4 ) && ISQRECTF( 1 ) && ISQIMAGE( 2 ) && ISQRECTF( 3 ) && ( HB_ISNUM( 4 ) || HB_ISNIL( 4 ) ) )
  {
    QPainter_drawImage1();
  }
  else if( ISBETWEEN( 3, 4 ) && ISQRECT( 1 ) && ISQIMAGE( 2 ) && ISQRECT( 3 ) && ( HB_ISNUM( 4 ) || HB_ISNIL( 4 ) ) )
  {
    QPainter_drawImage2();
  }
  else if( ISNUMPAR( 2 ) && ISQPOINTF( 1 ) && ISQIMAGE( 2 ) )
  {
    QPainter_drawImage3();
  }
  else if( ISNUMPAR( 2 ) && ISQPOINT( 1 ) && ISQIMAGE( 2 ) )
  {
    QPainter_drawImage4();
  }
  else if( ISBETWEEN( 3, 4 ) && ISQPOINTF( 1 ) && ISQIMAGE( 2 ) && ISQRECTF( 3 ) && ( HB_ISNUM( 4 ) || HB_ISNIL( 4 ) ) )
  {
    QPainter_drawImage5();
  }
  else if( ISBETWEEN( 3, 4 ) && ISQPOINT( 1 ) && ISQIMAGE( 2 ) && ISQRECT( 3 ) && ( HB_ISNUM( 4 ) || HB_ISNIL( 4 ) ) )
  {
    QPainter_drawImage6();
  }
  else if( ISNUMPAR( 2 ) && ISQRECTF( 1 ) && ISQIMAGE( 2 ) )
  {
    QPainter_drawImage7();
  }
  else if( ISNUMPAR( 2 ) && ISQRECT( 1 ) && ISQIMAGE( 2 ) )
  {
    QPainter_drawImage8();
  }
  else if( ISBETWEEN( 3, 8 ) && HB_ISNUM( 1 ) && HB_ISNUM( 2 ) && ISQIMAGE( 3 ) && ( HB_ISNUM( 4 ) || HB_ISNIL( 4 ) ) && ( HB_ISNUM( 5 ) || HB_ISNIL( 5 ) ) && ( HB_ISNUM( 6 ) || HB_ISNIL( 6 ) ) && ( HB_ISNUM( 7 ) || HB_ISNIL( 7 ) ) && ( HB_ISNUM( 8 ) || HB_ISNIL( 8 ) ) )
  {
    QPainter_drawImage9();
  }
  else
  {
    hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
  }
}

/*
void drawLine( const QLineF & line )
*/
void QPainter_drawLine1()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawLine( *PQLINEF( 1 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawLine( const QLine & line )
*/
void QPainter_drawLine2()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawLine( *PQLINE( 1 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawLine( const QPoint & p1, const QPoint & p2 )
*/
void QPainter_drawLine3()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawLine( *PQPOINT( 1 ), *PQPOINT( 2 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawLine( const QPointF & p1, const QPointF & p2 )
*/
void QPainter_drawLine4()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawLine( *PQPOINTF( 1 ), *PQPOINTF( 2 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawLine( int x1, int y1, int x2, int y2 )
*/
void QPainter_drawLine5()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawLine( PINT( 1 ), PINT( 2 ), PINT( 3 ), PINT( 4 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

HB_FUNC_STATIC( QPAINTER_DRAWLINE )
{
  if( ISNUMPAR( 1 ) && ISQLINEF( 1 ) )
  {
    QPainter_drawLine1();
  }
  else if( ISNUMPAR( 1 ) && ISQLINE( 1 ) )
  {
    QPainter_drawLine2();
  }
  else if( ISNUMPAR( 2 ) && ISQPOINT( 1 ) && ISQPOINT( 2 ) )
  {
    QPainter_drawLine3();
  }
  else if( ISNUMPAR( 2 ) && ISQPOINTF( 1 ) && ISQPOINTF( 2 ) )
  {
    QPainter_drawLine4();
  }
  else if( ISNUMPAR( 4 ) && HB_ISNUM( 1 ) && HB_ISNUM( 2 ) && HB_ISNUM( 3 ) && HB_ISNUM( 4 ) )
  {
    QPainter_drawLine5();
  }
  else
  {
    hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
  }
}

/*
void drawLines( const QVector<QPointF> & pointPairs )
*/
void QPainter_drawLines5()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    QVector<QPointF> par1;
    PHB_ITEM aList1 = hb_param( 1, HB_IT_ARRAY );
    int nLen1 = hb_arrayLen( aList1 );
    for( auto i1 = 0; i1 < nLen1; i1++ )
    {
      par1 << *static_cast< QPointF * >( hb_itemGetPtr( hb_objSendMsg( hb_arrayGetItemPtr( aList1, i1+1 ), "POINTER", 0 ) ) );
    }
    obj->drawLines( par1 );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawLines( const QVector<QPoint> & pointPairs )
*/
void QPainter_drawLines6()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    QVector<QPoint> par1;
    PHB_ITEM aList1 = hb_param( 1, HB_IT_ARRAY );
    int nLen1 = hb_arrayLen( aList1 );
    for( auto i1 = 0; i1 < nLen1; i1++ )
    {
      par1 << *static_cast< QPoint * >( hb_itemGetPtr( hb_objSendMsg( hb_arrayGetItemPtr( aList1, i1+1 ), "POINTER", 0 ) ) );
    }
    obj->drawLines( par1 );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawLines( const QVector<QLineF> & lines )
*/
void QPainter_drawLines7()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    QVector<QLineF> par1;
    PHB_ITEM aList1 = hb_param( 1, HB_IT_ARRAY );
    int nLen1 = hb_arrayLen( aList1 );
    for( auto i1 = 0; i1 < nLen1; i1++ )
    {
      par1 << *static_cast< QLineF * >( hb_itemGetPtr( hb_objSendMsg( hb_arrayGetItemPtr( aList1, i1+1 ), "POINTER", 0 ) ) );
    }
    obj->drawLines( par1 );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawLines( const QVector<QLine> & lines )
*/
void QPainter_drawLines8()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    QVector<QLine> par1;
    PHB_ITEM aList1 = hb_param( 1, HB_IT_ARRAY );
    int nLen1 = hb_arrayLen( aList1 );
    for( auto i1 = 0; i1 < nLen1; i1++ )
    {
      par1 << *static_cast< QLine * >( hb_itemGetPtr( hb_objSendMsg( hb_arrayGetItemPtr( aList1, i1+1 ), "POINTER", 0 ) ) );
    }
    obj->drawLines( par1 );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
[1]void drawLines ( const QLineF * lines, int lineCount )
[2]void drawLines ( const QLine * lines, int lineCount )
[3]void drawLines ( const QPointF * pointPairs, int lineCount )
[4]void drawLines ( const QPoint * pointPairs, int lineCount )
[5]void drawLines ( const QVector<QPointF> & pointPairs )
[6]void drawLines ( const QVector<QPoint> & pointPairs )
[7]void drawLines ( const QVector<QLineF> & lines )
[8]void drawLines ( const QVector<QLine> & lines )
*/

HB_FUNC_STATIC( QPAINTER_DRAWLINES )
{
}

/*
void drawPath( const QPainterPath & path )
*/
HB_FUNC_STATIC( QPAINTER_DRAWPATH )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 1 ) && ISQPAINTERPATH( 1 ) )
    {
#endif
      obj->drawPath( *PQPAINTERPATH( 1 ) );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawPicture( const QPointF & point, const QPicture & picture )
*/
void QPainter_drawPicture1()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawPicture( *PQPOINTF( 1 ), *PQPICTURE( 2 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawPicture( const QPoint & point, const QPicture & picture )
*/
void QPainter_drawPicture2()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawPicture( *PQPOINT( 1 ), *PQPICTURE( 2 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawPicture( int x, int y, const QPicture & picture )
*/
void QPainter_drawPicture3()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawPicture( PINT( 1 ), PINT( 2 ), *PQPICTURE( 3 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

HB_FUNC_STATIC( QPAINTER_DRAWPICTURE )
{
  if( ISNUMPAR( 2 ) && ISQPOINTF( 1 ) && ISQPICTURE( 2 ) )
  {
    QPainter_drawPicture1();
  }
  else if( ISNUMPAR( 2 ) && ISQPOINT( 1 ) && ISQPICTURE( 2 ) )
  {
    QPainter_drawPicture2();
  }
  else if( ISNUMPAR( 3 ) && HB_ISNUM( 1 ) && HB_ISNUM( 2 ) && ISQPICTURE( 3 ) )
  {
    QPainter_drawPicture3();
  }
  else
  {
    hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
  }
}

/*
void drawPie( const QRectF & rectangle, int startAngle, int spanAngle )
*/
void QPainter_drawPie1()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawPie( *PQRECTF( 1 ), PINT( 2 ), PINT( 3 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawPie( const QRect & rectangle, int startAngle, int spanAngle )
*/
void QPainter_drawPie2()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawPie( *PQRECT( 1 ), PINT( 2 ), PINT( 3 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawPie( int x, int y, int width, int height, int startAngle, int spanAngle )
*/
void QPainter_drawPie3()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawPie( PINT( 1 ), PINT( 2 ), PINT( 3 ), PINT( 4 ), PINT( 5 ), PINT( 6 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

HB_FUNC_STATIC( QPAINTER_DRAWPIE )
{
  if( ISNUMPAR( 3 ) && ISQRECTF( 1 ) && HB_ISNUM( 2 ) && HB_ISNUM( 3 ) )
  {
    QPainter_drawPie1();
  }
  else if( ISNUMPAR( 3 ) && ISQRECT( 1 ) && HB_ISNUM( 2 ) && HB_ISNUM( 3 ) )
  {
    QPainter_drawPie2();
  }
  else if( ISNUMPAR( 6 ) && HB_ISNUM( 1 ) && HB_ISNUM( 2 ) && HB_ISNUM( 3 ) && HB_ISNUM( 4 ) && HB_ISNUM( 5 ) && HB_ISNUM( 6 ) )
  {
    QPainter_drawPie3();
  }
  else
  {
    hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
  }
}

/*
void drawPixmap( const QRectF & target, const QPixmap & pixmap, const QRectF & source )
*/
void QPainter_drawPixmap1()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawPixmap( *PQRECTF( 1 ), *PQPIXMAP( 2 ), *PQRECTF( 3 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawPixmap( const QRect & target, const QPixmap & pixmap, const QRect & source )
*/
void QPainter_drawPixmap2()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawPixmap( *PQRECT( 1 ), *PQPIXMAP( 2 ), *PQRECT( 3 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawPixmap( const QPointF & point, const QPixmap & pixmap, const QRectF & source )
*/
void QPainter_drawPixmap3()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawPixmap( *PQPOINTF( 1 ), *PQPIXMAP( 2 ), *PQRECTF( 3 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawPixmap( const QPoint & point, const QPixmap & pixmap, const QRect & source )
*/
void QPainter_drawPixmap4()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawPixmap( *PQPOINT( 1 ), *PQPIXMAP( 2 ), *PQRECT( 3 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawPixmap( const QPointF & point, const QPixmap & pixmap )
*/
void QPainter_drawPixmap5()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawPixmap( *PQPOINTF( 1 ), *PQPIXMAP( 2 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawPixmap( const QPoint & point, const QPixmap & pixmap )
*/
void QPainter_drawPixmap6()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawPixmap( *PQPOINT( 1 ), *PQPIXMAP( 2 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawPixmap( int x, int y, const QPixmap & pixmap )
*/
void QPainter_drawPixmap7()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawPixmap( PINT( 1 ), PINT( 2 ), *PQPIXMAP( 3 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawPixmap( const QRect & rectangle, const QPixmap & pixmap )
*/
void QPainter_drawPixmap8()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawPixmap( *PQRECT( 1 ), *PQPIXMAP( 2 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawPixmap( int x, int y, int width, int height, const QPixmap & pixmap )
*/
void QPainter_drawPixmap9()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawPixmap( PINT( 1 ), PINT( 2 ), PINT( 3 ), PINT( 4 ), *PQPIXMAP( 5 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawPixmap( int x, int y, int w, int h, const QPixmap & pixmap, int sx, int sy, int sw, int sh )
*/
void QPainter_drawPixmap10()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawPixmap( PINT( 1 ), PINT( 2 ), PINT( 3 ), PINT( 4 ), *PQPIXMAP( 5 ), PINT( 6 ), PINT( 7 ), PINT( 8 ), PINT( 9 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawPixmap( int x, int y, const QPixmap & pixmap, int sx, int sy, int sw, int sh )
*/
void QPainter_drawPixmap11()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawPixmap( PINT( 1 ), PINT( 2 ), *PQPIXMAP( 3 ), PINT( 4 ), PINT( 5 ), PINT( 6 ), PINT( 7 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

HB_FUNC_STATIC( QPAINTER_DRAWPIXMAP )
{
  if( ISNUMPAR( 3 ) && ISQRECTF( 1 ) && ISQPIXMAP( 2 ) && ISQRECTF( 3 ) )
  {
    QPainter_drawPixmap1();
  }
  else if( ISNUMPAR( 3 ) && ISQRECT( 1 ) && ISQPIXMAP( 2 ) && ISQRECT( 3 ) )
  {
    QPainter_drawPixmap2();
  }
  else if( ISNUMPAR( 3 ) && ISQPOINTF( 1 ) && ISQPIXMAP( 2 ) && ISQRECTF( 3 ) )
  {
    QPainter_drawPixmap3();
  }
  else if( ISNUMPAR( 3 ) && ISQPOINT( 1 ) && ISQPIXMAP( 2 ) && ISQRECT( 3 ) )
  {
    QPainter_drawPixmap4();
  }
  else if( ISNUMPAR( 2 ) && ISQPOINTF( 1 ) && ISQPIXMAP( 2 ) )
  {
    QPainter_drawPixmap5();
  }
  else if( ISNUMPAR( 2 ) && ISQPOINT( 1 ) && ISQPIXMAP( 2 ) )
  {
    QPainter_drawPixmap6();
  }
  else if( ISNUMPAR( 3 ) && HB_ISNUM( 1 ) && HB_ISNUM( 2 ) && ISQPIXMAP( 3 ) )
  {
    QPainter_drawPixmap7();
  }
  else if( ISNUMPAR( 2 ) && ISQRECT( 1 ) && ISQPIXMAP( 2 ) )
  {
    QPainter_drawPixmap8();
  }
  else if( ISNUMPAR( 5 ) && HB_ISNUM( 1 ) && HB_ISNUM( 2 ) && HB_ISNUM( 3 ) && HB_ISNUM( 4 ) && ISQPIXMAP( 5 ) )
  {
    QPainter_drawPixmap9();
  }
  else if( ISNUMPAR( 9 ) && HB_ISNUM( 1 ) && HB_ISNUM( 2 ) && HB_ISNUM( 3 ) && HB_ISNUM( 4 ) && ISQPIXMAP( 5 ) && HB_ISNUM( 6 ) && HB_ISNUM( 7 ) && HB_ISNUM( 8 ) && HB_ISNUM( 9 ) )
  {
    QPainter_drawPixmap10();
  }
  else if( ISNUMPAR( 7 ) && HB_ISNUM( 1 ) && HB_ISNUM( 2 ) && ISQPIXMAP( 3 ) && HB_ISNUM( 4 ) && HB_ISNUM( 5 ) && HB_ISNUM( 6 ) && HB_ISNUM( 7 ) )
  {
    QPainter_drawPixmap11();
  }
  else
  {
    hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
  }
}

/*
void drawPoint( const QPointF & position )
*/
void QPainter_drawPoint1()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawPoint( *PQPOINTF( 1 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawPoint( const QPoint & position )
*/
void QPainter_drawPoint2()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawPoint( *PQPOINT( 1 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawPoint( int x, int y )
*/
void QPainter_drawPoint3()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawPoint( PINT( 1 ), PINT( 2 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

HB_FUNC_STATIC( QPAINTER_DRAWPOINT )
{
  if( ISNUMPAR( 1 ) && ISQPOINTF( 1 ) )
  {
    QPainter_drawPoint1();
  }
  else if( ISNUMPAR( 1 ) && ISQPOINT( 1 ) )
  {
    QPainter_drawPoint2();
  }
  else if( ISNUMPAR( 2 ) && HB_ISNUM( 1 ) && HB_ISNUM( 2 ) )
  {
    QPainter_drawPoint3();
  }
  else
  {
    hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
  }
}

/*
void drawPoints( const QPolygonF & points )
*/
void QPainter_drawPoints3()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawPoints( *PQPOLYGONF( 1 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawPoints( const QPolygon & points )
*/
void QPainter_drawPoints4()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawPoints( *PQPOLYGON( 1 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
[1]void drawPoints ( const QPointF * points, int pointCount )
[2]void drawPoints ( const QPoint * points, int pointCount )
[3]void drawPoints ( const QPolygonF & points )
[4]void drawPoints ( const QPolygon & points )
*/

HB_FUNC_STATIC( QPAINTER_DRAWPOINTS )
{
  if( ISNUMPAR( 1 ) && ISQPOLYGONF( 1 ) )
  {
    QPainter_drawPoints3();
  }
  else if( ISNUMPAR( 1 ) && ISQPOLYGON( 1 ) )
  {
    QPainter_drawPoints4();
  }
  else
  {
    hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
  }
}

/*
void drawPolygon( const QPolygonF & points, Qt::FillRule fillRule = Qt::OddEvenFill )
*/
void QPainter_drawPolygon3()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawPolygon( *PQPOLYGONF( 1 ), HB_ISNIL( 2 ) ? static_cast< Qt::FillRule >( Qt::OddEvenFill ) : static_cast< Qt::FillRule >( hb_parni( 2 ) ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawPolygon( const QPolygon & points, Qt::FillRule fillRule = Qt::OddEvenFill )
*/
void QPainter_drawPolygon4()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawPolygon( *PQPOLYGON( 1 ), HB_ISNIL( 2 ) ? static_cast< Qt::FillRule >( Qt::OddEvenFill ) : static_cast< Qt::FillRule >( hb_parni( 2 ) ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
[1]void drawPolygon ( const QPointF * points, int pointCount, Qt::FillRule fillRule = Qt::OddEvenFill )
[2]void drawPolygon ( const QPoint * points, int pointCount, Qt::FillRule fillRule = Qt::OddEvenFill )
[3]void drawPolygon ( const QPolygonF & points, Qt::FillRule fillRule = Qt::OddEvenFill )
[4]void drawPolygon ( const QPolygon & points, Qt::FillRule fillRule = Qt::OddEvenFill )
*/

HB_FUNC_STATIC( QPAINTER_DRAWPOLYGON )
{
  if( ISBETWEEN( 1, 2 ) && ISQPOLYGONF( 1 ) && ( HB_ISNUM( 2 ) || HB_ISNIL( 2 ) ) )
  {
    QPainter_drawPolygon3();
  }
  else if( ISBETWEEN( 1, 2 ) && ISQPOLYGON( 1 ) && ( HB_ISNUM( 2 ) || HB_ISNIL( 2 ) ) )
  {
    QPainter_drawPolygon4();
  }
  else
  {
    hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
  }
}

/*
void drawPolyline( const QPolygonF & points )
*/
void QPainter_drawPolyline3()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawPolyline( *PQPOLYGONF( 1 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawPolyline( const QPolygon & points )
*/
void QPainter_drawPolyline4()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawPolyline( *PQPOLYGON( 1 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
[1]void drawPolyline ( const QPointF * points, int pointCount )
[2]void drawPolyline ( const QPoint * points, int pointCount )
[3]void drawPolyline ( const QPolygonF & points )
[4]void drawPolyline ( const QPolygon & points )
*/

HB_FUNC_STATIC( QPAINTER_DRAWPOLYLINE )
{
  if( ISNUMPAR( 1 ) && ISQPOLYGONF( 1 ) )
  {
    QPainter_drawPolyline3();
  }
  else if( ISNUMPAR( 1 ) && ISQPOLYGON( 1 ) )
  {
    QPainter_drawPolyline4();
  }
  else
  {
    hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
  }
}

/*
void drawRect( const QRectF & rectangle )
*/
void QPainter_drawRect1()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawRect( *PQRECTF( 1 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawRect( const QRect & rectangle )
*/
void QPainter_drawRect2()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawRect( *PQRECT( 1 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawRect( int x, int y, int width, int height )
*/
void QPainter_drawRect3()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawRect( PINT( 1 ), PINT( 2 ), PINT( 3 ), PINT( 4 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

HB_FUNC_STATIC( QPAINTER_DRAWRECT )
{
  if( ISNUMPAR( 1 ) && ISQRECTF( 1 ) )
  {
    QPainter_drawRect1();
  }
  else if( ISNUMPAR( 1 ) && ISQRECT( 1 ) )
  {
    QPainter_drawRect2();
  }
  else if( ISNUMPAR( 4 ) && HB_ISNUM( 1 ) && HB_ISNUM( 2 ) && HB_ISNUM( 3 ) && HB_ISNUM( 4 ) )
  {
    QPainter_drawRect3();
  }
  else
  {
    hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
  }
}

/*
void drawRects( const QVector<QRectF> & rectangles )
*/
void QPainter_drawRects3()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    QVector<QRectF> par1;
    PHB_ITEM aList1 = hb_param( 1, HB_IT_ARRAY );
    int nLen1 = hb_arrayLen( aList1 );
    for( auto i1 = 0; i1 < nLen1; i1++ )
    {
      par1 << *static_cast< QRectF * >( hb_itemGetPtr( hb_objSendMsg( hb_arrayGetItemPtr( aList1, i1+1 ), "POINTER", 0 ) ) );
    }
    obj->drawRects( par1 );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawRects( const QVector<QRect> & rectangles )
*/
void QPainter_drawRects4()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    QVector<QRect> par1;
    PHB_ITEM aList1 = hb_param( 1, HB_IT_ARRAY );
    int nLen1 = hb_arrayLen( aList1 );
    for( auto i1 = 0; i1 < nLen1; i1++ )
    {
      par1 << *static_cast< QRect * >( hb_itemGetPtr( hb_objSendMsg( hb_arrayGetItemPtr( aList1, i1+1 ), "POINTER", 0 ) ) );
    }
    obj->drawRects( par1 );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
[1]void drawRects ( const QRectF * rectangles, int rectCount )
[2]void drawRects ( const QRect * rectangles, int rectCount )
[3]void drawRects ( const QVector<QRectF> & rectangles )
[4]void drawRects ( const QVector<QRect> & rectangles )
*/

HB_FUNC_STATIC( QPAINTER_DRAWRECTS )
{
}

/*
void drawRoundedRect( const QRectF & rect, qreal xRadius, qreal yRadius, Qt::SizeMode mode = Qt::AbsoluteSize )
*/
void QPainter_drawRoundedRect1()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawRoundedRect( *PQRECTF( 1 ), PQREAL( 2 ), PQREAL( 3 ), HB_ISNIL( 4 ) ? static_cast< Qt::SizeMode >( Qt::AbsoluteSize ) : static_cast< Qt::SizeMode >( hb_parni( 4 ) ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawRoundedRect( const QRect & rect, qreal xRadius, qreal yRadius, Qt::SizeMode mode = Qt::AbsoluteSize )
*/
void QPainter_drawRoundedRect2()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawRoundedRect( *PQRECT( 1 ), PQREAL( 2 ), PQREAL( 3 ), HB_ISNIL( 4 ) ? static_cast< Qt::SizeMode >( Qt::AbsoluteSize ) : static_cast< Qt::SizeMode >( hb_parni( 4 ) ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawRoundedRect( int x, int y, int w, int h, qreal xRadius, qreal yRadius, Qt::SizeMode mode = Qt::AbsoluteSize )
*/
void QPainter_drawRoundedRect3()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawRoundedRect( PINT( 1 ), PINT( 2 ), PINT( 3 ), PINT( 4 ), PQREAL( 5 ), PQREAL( 6 ), HB_ISNIL( 7 ) ? static_cast< Qt::SizeMode >( Qt::AbsoluteSize ) : static_cast< Qt::SizeMode >( hb_parni( 7 ) ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

HB_FUNC_STATIC( QPAINTER_DRAWROUNDEDRECT )
{
  if( ISBETWEEN( 3, 4 ) && ISQRECTF( 1 ) && HB_ISNUM( 2 ) && HB_ISNUM( 3 ) && ( HB_ISNUM( 4 ) || HB_ISNIL( 4 ) ) )
  {
    QPainter_drawRoundedRect1();
  }
  else if( ISBETWEEN( 3, 4 ) && ISQRECT( 1 ) && HB_ISNUM( 2 ) && HB_ISNUM( 3 ) && ( HB_ISNUM( 4 ) || HB_ISNIL( 4 ) ) )
  {
    QPainter_drawRoundedRect2();
  }
  else if( ISBETWEEN( 6, 7 ) && HB_ISNUM( 1 ) && HB_ISNUM( 2 ) && HB_ISNUM( 3 ) && HB_ISNUM( 4 ) && HB_ISNUM( 5 ) && HB_ISNUM( 6 ) && ( HB_ISNUM( 7 ) || HB_ISNIL( 7 ) ) )
  {
    QPainter_drawRoundedRect3();
  }
  else
  {
    hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
  }
}

/*
void drawStaticText( const QPointF & topLeftPosition, const QStaticText & staticText )
*/
void QPainter_drawStaticText1()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawStaticText( *PQPOINTF( 1 ), *PQSTATICTEXT( 2 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawStaticText( const QPoint & topLeftPosition, const QStaticText & staticText )
*/
void QPainter_drawStaticText2()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawStaticText( *PQPOINT( 1 ), *PQSTATICTEXT( 2 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawStaticText( int left, int top, const QStaticText & staticText )
*/
void QPainter_drawStaticText3()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawStaticText( PINT( 1 ), PINT( 2 ), *PQSTATICTEXT( 3 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

HB_FUNC_STATIC( QPAINTER_DRAWSTATICTEXT )
{
  if( ISNUMPAR( 2 ) && ISQPOINTF( 1 ) && ISQSTATICTEXT( 2 ) )
  {
    QPainter_drawStaticText1();
  }
  else if( ISNUMPAR( 2 ) && ISQPOINT( 1 ) && ISQSTATICTEXT( 2 ) )
  {
    QPainter_drawStaticText2();
  }
  else if( ISNUMPAR( 3 ) && HB_ISNUM( 1 ) && HB_ISNUM( 2 ) && ISQSTATICTEXT( 3 ) )
  {
    QPainter_drawStaticText3();
  }
  else
  {
    hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
  }
}

/*
void drawText( const QPointF & position, const QString & text )
*/
void QPainter_drawText1()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawText( *PQPOINTF( 1 ), PQSTRING( 2 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawText( const QPoint & position, const QString & text )
*/
void QPainter_drawText2()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawText( *PQPOINT( 1 ), PQSTRING( 2 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawText( const QRectF & rectangle, int flags, const QString & text, QRectF * boundingRect = nullptr )
*/
void QPainter_drawText3()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawText( *PQRECTF( 1 ), PINT( 2 ), PQSTRING( 3 ), HB_ISNIL( 4 ) ? nullptr : static_cast< QRectF * >( Qt5xHb::itemGetPtr( 4 ) ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawText( const QRect & rectangle, int flags, const QString & text, QRect * boundingRect = nullptr )
*/
void QPainter_drawText4()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawText( *PQRECT( 1 ), PINT( 2 ), PQSTRING( 3 ), HB_ISNIL( 4 ) ? nullptr : static_cast< QRect * >( Qt5xHb::itemGetPtr( 4 ) ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawText( int x, int y, const QString & text )
*/
void QPainter_drawText5()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawText( PINT( 1 ), PINT( 2 ), PQSTRING( 3 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawText( int x, int y, int width, int height, int flags, const QString & text, QRect * boundingRect = nullptr )
*/
void QPainter_drawText6()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawText( PINT( 1 ), PINT( 2 ), PINT( 3 ), PINT( 4 ), PINT( 5 ), PQSTRING( 6 ), HB_ISNIL( 7 ) ? nullptr : static_cast< QRect * >( Qt5xHb::itemGetPtr( 7 ) ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawText( const QRectF & rectangle, const QString & text, const QTextOption & option = QTextOption() )
*/
void QPainter_drawText7()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawText( *PQRECTF( 1 ), PQSTRING( 2 ), HB_ISNIL( 3 ) ? QTextOption() : *static_cast< QTextOption * >( Qt5xHb::itemGetPtr( 3 ) ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

HB_FUNC_STATIC( QPAINTER_DRAWTEXT )
{
  if( ISNUMPAR( 2 ) && ISQPOINTF( 1 ) && HB_ISCHAR( 2 ) )
  {
    QPainter_drawText1();
  }
  else if( ISNUMPAR( 2 ) && ISQPOINT( 1 ) && HB_ISCHAR( 2 ) )
  {
    QPainter_drawText2();
  }
  else if( ISBETWEEN( 3, 4 ) && ISQRECTF( 1 ) && HB_ISNUM( 2 ) && HB_ISCHAR( 3 ) && ( ISQRECTF( 4 ) || HB_ISNIL( 4 ) ) )
  {
    QPainter_drawText3();
  }
  else if( ISBETWEEN( 3, 4 ) && ISQRECT( 1 ) && HB_ISNUM( 2 ) && HB_ISCHAR( 3 ) && ( ISQRECT( 4 ) || HB_ISNIL( 4 ) ) )
  {
    QPainter_drawText4();
  }
  else if( ISNUMPAR( 3 ) && HB_ISNUM( 1 ) && HB_ISNUM( 2 ) && HB_ISCHAR( 3 ) )
  {
    QPainter_drawText5();
  }
  else if( ISBETWEEN( 6, 7 ) && HB_ISNUM( 1 ) && HB_ISNUM( 2 ) && HB_ISNUM( 3 ) && HB_ISNUM( 4 ) && HB_ISNUM( 5 ) && HB_ISCHAR( 6 ) && ( ISQRECT( 7 ) || HB_ISNIL( 7 ) ) )
  {
    QPainter_drawText6();
  }
  else if( ISBETWEEN( 2, 3 ) && ISQRECTF( 1 ) && HB_ISCHAR( 2 ) && ( ISQTEXTOPTION( 3 ) || HB_ISNIL( 3 ) ) )
  {
    QPainter_drawText7();
  }
  else
  {
    hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
  }
}

/*
void drawTiledPixmap( const QRectF & rectangle, const QPixmap & pixmap, const QPointF & position = QPointF() )
*/
void QPainter_drawTiledPixmap1()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawTiledPixmap( *PQRECTF( 1 ), *PQPIXMAP( 2 ), HB_ISNIL( 3 ) ? QPointF() : *static_cast< QPointF * >( Qt5xHb::itemGetPtr( 3 ) ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawTiledPixmap( const QRect & rectangle, const QPixmap & pixmap, const QPoint & position = QPoint() )
*/
void QPainter_drawTiledPixmap2()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawTiledPixmap( *PQRECT( 1 ), *PQPIXMAP( 2 ), HB_ISNIL( 3 ) ? QPoint() : *static_cast< QPoint * >( Qt5xHb::itemGetPtr( 3 ) ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void drawTiledPixmap( int x, int y, int width, int height, const QPixmap & pixmap, int sx = 0, int sy = 0 )
*/
void QPainter_drawTiledPixmap3()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->drawTiledPixmap( PINT( 1 ), PINT( 2 ), PINT( 3 ), PINT( 4 ), *PQPIXMAP( 5 ), OPINT( 6, 0 ), OPINT( 7, 0 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

HB_FUNC_STATIC( QPAINTER_DRAWTILEDPIXMAP )
{
  if( ISBETWEEN( 2, 3 ) && ISQRECTF( 1 ) && ISQPIXMAP( 2 ) && ( ISQPOINTF( 3 ) || HB_ISNIL( 3 ) ) )
  {
    QPainter_drawTiledPixmap1();
  }
  else if( ISBETWEEN( 2, 3 ) && ISQRECT( 1 ) && ISQPIXMAP( 2 ) && ( ISQPOINT( 3 ) || HB_ISNIL( 3 ) ) )
  {
    QPainter_drawTiledPixmap2();
  }
  else if( ISBETWEEN( 5, 7 ) && HB_ISNUM( 1 ) && HB_ISNUM( 2 ) && HB_ISNUM( 3 ) && HB_ISNUM( 4 ) && ISQPIXMAP( 5 ) && ( HB_ISNUM( 6 ) || HB_ISNIL( 6 ) ) && ( HB_ISNUM( 7 ) || HB_ISNIL( 7 ) ) )
  {
    QPainter_drawTiledPixmap3();
  }
  else
  {
    hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
  }
}

/*
bool end()
*/
HB_FUNC_STATIC( QPAINTER_END )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 0 ) )
    {
#endif
      RBOOL( obj->end() );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }
}

/*
void endNativePainting()
*/
HB_FUNC_STATIC( QPAINTER_ENDNATIVEPAINTING )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 0 ) )
    {
#endif
      obj->endNativePainting();
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void eraseRect( const QRectF & rectangle )
*/
void QPainter_eraseRect1()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->eraseRect( *PQRECTF( 1 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void eraseRect( const QRect & rectangle )
*/
void QPainter_eraseRect2()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->eraseRect( *PQRECT( 1 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void eraseRect( int x, int y, int width, int height )
*/
void QPainter_eraseRect3()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->eraseRect( PINT( 1 ), PINT( 2 ), PINT( 3 ), PINT( 4 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

HB_FUNC_STATIC( QPAINTER_ERASERECT )
{
  if( ISNUMPAR( 1 ) && ISQRECTF( 1 ) )
  {
    QPainter_eraseRect1();
  }
  else if( ISNUMPAR( 1 ) && ISQRECT( 1 ) )
  {
    QPainter_eraseRect2();
  }
  else if( ISNUMPAR( 4 ) && HB_ISNUM( 1 ) && HB_ISNUM( 2 ) && HB_ISNUM( 3 ) && HB_ISNUM( 4 ) )
  {
    QPainter_eraseRect3();
  }
  else
  {
    hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
  }
}

/*
void fillPath( const QPainterPath & path, const QBrush & brush )
*/
HB_FUNC_STATIC( QPAINTER_FILLPATH )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 2 ) && ISQPAINTERPATH( 1 ) && ISQBRUSH( 2 ) )
    {
#endif
      obj->fillPath( *PQPAINTERPATH( 1 ), *PQBRUSH( 2 ) );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void fillRect( const QRectF & rectangle, const QBrush & brush )
*/
void QPainter_fillRect1()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->fillRect( *PQRECTF( 1 ), *PQBRUSH( 2 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void fillRect( int x, int y, int width, int height, Qt::BrushStyle style )
*/
void QPainter_fillRect2()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->fillRect( PINT( 1 ), PINT( 2 ), PINT( 3 ), PINT( 4 ), static_cast<Qt::BrushStyle>( hb_parni( 5 ) ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void fillRect( const QRect & rectangle, Qt::BrushStyle style )
*/
void QPainter_fillRect3()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->fillRect( *PQRECT( 1 ), static_cast<Qt::BrushStyle>( hb_parni( 2 ) ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void fillRect( const QRectF & rectangle, Qt::BrushStyle style )
*/
void QPainter_fillRect4()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->fillRect( *PQRECTF( 1 ), static_cast<Qt::BrushStyle>( hb_parni( 2 ) ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void fillRect( const QRect & rectangle, const QBrush & brush )
*/
void QPainter_fillRect5()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->fillRect( *PQRECT( 1 ), *PQBRUSH( 2 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void fillRect( const QRect & rectangle, const QColor & color )
*/
void QPainter_fillRect6()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->fillRect( *PQRECT( 1 ), HB_ISOBJECT( 2 ) ? *static_cast< QColor * >( Qt5xHb::itemGetPtr( 2 ) ) : QColor( hb_parc( 2 ) ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void fillRect( const QRectF & rectangle, const QColor & color )
*/
void QPainter_fillRect7()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->fillRect( *PQRECTF( 1 ), HB_ISOBJECT( 2 ) ? *static_cast< QColor * >( Qt5xHb::itemGetPtr( 2 ) ) : QColor( hb_parc( 2 ) ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void fillRect( int x, int y, int width, int height, const QBrush & brush )
*/
void QPainter_fillRect8()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->fillRect( PINT( 1 ), PINT( 2 ), PINT( 3 ), PINT( 4 ), *PQBRUSH( 5 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void fillRect( int x, int y, int width, int height, const QColor & color )
*/
void QPainter_fillRect9()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->fillRect( PINT( 1 ), PINT( 2 ), PINT( 3 ), PINT( 4 ), HB_ISOBJECT( 5 ) ? *static_cast< QColor * >( Qt5xHb::itemGetPtr( 5 ) ) : QColor( hb_parc( 5 ) ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void fillRect( int x, int y, int width, int height, Qt::GlobalColor color )
*/
void QPainter_fillRect10()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->fillRect( PINT( 1 ), PINT( 2 ), PINT( 3 ), PINT( 4 ), static_cast<Qt::GlobalColor>( hb_parni( 5 ) ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void fillRect( const QRect & rectangle, Qt::GlobalColor color )
*/
void QPainter_fillRect11()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->fillRect( *PQRECT( 1 ), static_cast<Qt::GlobalColor>( hb_parni( 2 ) ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void fillRect( const QRectF & rectangle, Qt::GlobalColor color )
*/
void QPainter_fillRect12()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->fillRect( *PQRECTF( 1 ), static_cast<Qt::GlobalColor>( hb_parni( 2 ) ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void fillRect( int x, int y, int width, int height, QGradient::Preset preset )
*/
void QPainter_fillRect13()
{
#if (QT_VERSION >= QT_VERSION_CHECK(5,12,0))
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->fillRect( PINT( 1 ), PINT( 2 ), PINT( 3 ), PINT( 4 ), static_cast<QGradient::Preset>( hb_parni( 5 ) ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
#endif
}

/*
void fillRect( const QRect & rectangle, QGradient::Preset preset )
*/
void QPainter_fillRect14()
{
#if (QT_VERSION >= QT_VERSION_CHECK(5,12,0))
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->fillRect( *PQRECT( 1 ), static_cast<QGradient::Preset>( hb_parni( 2 ) ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
#endif
}

/*
void fillRect( const QRectF & rectangle, QGradient::Preset preset )
*/
void QPainter_fillRect15()
{
#if (QT_VERSION >= QT_VERSION_CHECK(5,12,0))
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->fillRect( *PQRECTF( 1 ), static_cast<QGradient::Preset>( hb_parni( 2 ) ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
#endif
}

HB_FUNC_STATIC( QPAINTER_FILLRECT )
{
  if( ISNUMPAR( 2 ) && ISQRECTF( 1 ) && ISQBRUSH( 2 ) )
  {
    QPainter_fillRect1();
  }
  else if( ISNUMPAR( 5 ) && HB_ISNUM( 1 ) && HB_ISNUM( 2 ) && HB_ISNUM( 3 ) && HB_ISNUM( 4 ) && HB_ISNUM( 5 ) )
  {
    QPainter_fillRect2();
  }
  else if( ISNUMPAR( 2 ) && ISQRECT( 1 ) && HB_ISNUM( 2 ) )
  {
    QPainter_fillRect3();
  }
  else if( ISNUMPAR( 2 ) && ISQRECTF( 1 ) && HB_ISNUM( 2 ) )
  {
    QPainter_fillRect4();
  }
  else if( ISNUMPAR( 2 ) && ISQRECT( 1 ) && ISQBRUSH( 2 ) )
  {
    QPainter_fillRect5();
  }
  else if( ISNUMPAR( 2 ) && ISQRECT( 1 ) && ( ISQCOLOR( 2 )|| HB_ISCHAR( 2 ) ) )
  {
    QPainter_fillRect6();
  }
  else if( ISNUMPAR( 2 ) && ISQRECTF( 1 ) && ( ISQCOLOR( 2 )|| HB_ISCHAR( 2 ) ) )
  {
    QPainter_fillRect7();
  }
  else if( ISNUMPAR( 5 ) && HB_ISNUM( 1 ) && HB_ISNUM( 2 ) && HB_ISNUM( 3 ) && HB_ISNUM( 4 ) && ISQBRUSH( 5 ) )
  {
    QPainter_fillRect8();
  }
  else if( ISNUMPAR( 5 ) && HB_ISNUM( 1 ) && HB_ISNUM( 2 ) && HB_ISNUM( 3 ) && HB_ISNUM( 4 ) && ( ISQCOLOR( 5 )|| HB_ISCHAR( 5 ) ) )
  {
    QPainter_fillRect9();
  }
  else if( ISNUMPAR( 5 ) && HB_ISNUM( 1 ) && HB_ISNUM( 2 ) && HB_ISNUM( 3 ) && HB_ISNUM( 4 ) && HB_ISNUM( 5 ) )
  {
    QPainter_fillRect10();
  }
  else if( ISNUMPAR( 2 ) && ISQRECT( 1 ) && HB_ISNUM( 2 ) )
  {
    QPainter_fillRect11();
  }
  else if( ISNUMPAR( 2 ) && ISQRECTF( 1 ) && HB_ISNUM( 2 ) )
  {
    QPainter_fillRect12();
  }
  else if( ISNUMPAR( 5 ) && HB_ISNUM( 1 ) && HB_ISNUM( 2 ) && HB_ISNUM( 3 ) && HB_ISNUM( 4 ) && HB_ISNUM( 5 ) )
  {
    QPainter_fillRect13();
  }
  else if( ISNUMPAR( 2 ) && ISQRECT( 1 ) && HB_ISNUM( 2 ) )
  {
    QPainter_fillRect14();
  }
  else if( ISNUMPAR( 2 ) && ISQRECTF( 1 ) && HB_ISNUM( 2 ) )
  {
    QPainter_fillRect15();
  }
  else
  {
    hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
  }
}

/*
const QFont & font() const
*/
HB_FUNC_STATIC( QPAINTER_FONT )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 0 ) )
    {
#endif
      const QFont * ptr = &obj->font();
      Qt5xHb::createReturnClass( ptr, "QFONT", false );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }
}

/*
QFontInfo fontInfo() const
*/
HB_FUNC_STATIC( QPAINTER_FONTINFO )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 0 ) )
    {
#endif
      auto ptr = new QFontInfo( obj->fontInfo() );
      Qt5xHb::createReturnClass( ptr, "QFONTINFO", true );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }
}

/*
QFontMetrics fontMetrics() const
*/
HB_FUNC_STATIC( QPAINTER_FONTMETRICS )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 0 ) )
    {
#endif
      auto ptr = new QFontMetrics( obj->fontMetrics() );
      Qt5xHb::createReturnClass( ptr, "QFONTMETRICS", true );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }
}

/*
bool hasClipping() const
*/
HB_FUNC_STATIC( QPAINTER_HASCLIPPING )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 0 ) )
    {
#endif
      RBOOL( obj->hasClipping() );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }
}

/*
bool isActive() const
*/
HB_FUNC_STATIC( QPAINTER_ISACTIVE )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 0 ) )
    {
#endif
      RBOOL( obj->isActive() );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }
}

/*
Qt::LayoutDirection layoutDirection() const
*/
HB_FUNC_STATIC( QPAINTER_LAYOUTDIRECTION )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 0 ) )
    {
#endif
      RENUM( obj->layoutDirection() );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }
}

/*
qreal opacity() const
*/
HB_FUNC_STATIC( QPAINTER_OPACITY )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 0 ) )
    {
#endif
      RQREAL( obj->opacity() );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }
}

/*
QPaintEngine * paintEngine() const
*/
HB_FUNC_STATIC( QPAINTER_PAINTENGINE )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 0 ) )
    {
#endif
      QPaintEngine * ptr = obj->paintEngine();
      Qt5xHb::createReturnClass( ptr, "QPAINTENGINE", false );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }
}

/*
const QPen & pen() const
*/
HB_FUNC_STATIC( QPAINTER_PEN )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 0 ) )
    {
#endif
      const QPen * ptr = &obj->pen();
      Qt5xHb::createReturnClass( ptr, "QPEN", false );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }
}

/*
QPainter::RenderHints renderHints() const
*/
HB_FUNC_STATIC( QPAINTER_RENDERHINTS )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 0 ) )
    {
#endif
      RENUM( obj->renderHints() );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }
}

/*
void resetTransform()
*/
HB_FUNC_STATIC( QPAINTER_RESETTRANSFORM )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 0 ) )
    {
#endif
      obj->resetTransform();
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void restore()
*/
HB_FUNC_STATIC( QPAINTER_RESTORE )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 0 ) )
    {
#endif
      obj->restore();
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void rotate( qreal angle )
*/
HB_FUNC_STATIC( QPAINTER_ROTATE )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 1 ) && HB_ISNUM( 1 ) )
    {
#endif
      obj->rotate( PQREAL( 1 ) );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void save()
*/
HB_FUNC_STATIC( QPAINTER_SAVE )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 0 ) )
    {
#endif
      obj->save();
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void scale( qreal sx, qreal sy )
*/
HB_FUNC_STATIC( QPAINTER_SCALE )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 2 ) && HB_ISNUM( 1 ) && HB_ISNUM( 2 ) )
    {
#endif
      obj->scale( PQREAL( 1 ), PQREAL( 2 ) );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void setBackground( const QBrush & brush )
*/
HB_FUNC_STATIC( QPAINTER_SETBACKGROUND )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 1 ) && ISQBRUSH( 1 ) )
    {
#endif
      obj->setBackground( *PQBRUSH( 1 ) );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void setBackgroundMode( Qt::BGMode mode )
*/
HB_FUNC_STATIC( QPAINTER_SETBACKGROUNDMODE )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 1 ) && HB_ISNUM( 1 ) )
    {
#endif
      obj->setBackgroundMode( static_cast<Qt::BGMode>( hb_parni( 1 ) ) );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void setBrush( const QBrush & brush )
*/
void QPainter_setBrush1()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->setBrush( *PQBRUSH( 1 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void setBrush( Qt::BrushStyle style )
*/
void QPainter_setBrush2()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->setBrush( static_cast<Qt::BrushStyle>( hb_parni( 1 ) ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

HB_FUNC_STATIC( QPAINTER_SETBRUSH )
{
  if( ISNUMPAR( 1 ) && ISQBRUSH( 1 ) )
  {
    QPainter_setBrush1();
  }
  else if( ISNUMPAR( 1 ) && HB_ISNUM( 1 ) )
  {
    QPainter_setBrush2();
  }
  else
  {
    hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
  }
}

/*
void setBrushOrigin( const QPointF & position )
*/
void QPainter_setBrushOrigin1()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->setBrushOrigin( *PQPOINTF( 1 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void setBrushOrigin( const QPoint & position )
*/
void QPainter_setBrushOrigin2()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->setBrushOrigin( *PQPOINT( 1 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void setBrushOrigin( int x, int y )
*/
void QPainter_setBrushOrigin3()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->setBrushOrigin( PINT( 1 ), PINT( 2 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

HB_FUNC_STATIC( QPAINTER_SETBRUSHORIGIN )
{
  if( ISNUMPAR( 1 ) && ISQPOINTF( 1 ) )
  {
    QPainter_setBrushOrigin1();
  }
  else if( ISNUMPAR( 1 ) && ISQPOINT( 1 ) )
  {
    QPainter_setBrushOrigin2();
  }
  else if( ISNUMPAR( 2 ) && HB_ISNUM( 1 ) && HB_ISNUM( 2 ) )
  {
    QPainter_setBrushOrigin3();
  }
  else
  {
    hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
  }
}

/*
void setClipPath( const QPainterPath & path, Qt::ClipOperation operation = Qt::ReplaceClip )
*/
HB_FUNC_STATIC( QPAINTER_SETCLIPPATH )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISBETWEEN( 1, 2 ) && ISQPAINTERPATH( 1 ) && ( HB_ISNUM( 2 ) || HB_ISNIL( 2 ) ) )
    {
#endif
      obj->setClipPath( *PQPAINTERPATH( 1 ), HB_ISNIL( 2 ) ? static_cast< Qt::ClipOperation >( Qt::ReplaceClip ) : static_cast< Qt::ClipOperation >( hb_parni( 2 ) ) );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void setClipRect( const QRectF & rectangle, Qt::ClipOperation operation = Qt::ReplaceClip )
*/
void QPainter_setClipRect1()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->setClipRect( *PQRECTF( 1 ), HB_ISNIL( 2 ) ? static_cast< Qt::ClipOperation >( Qt::ReplaceClip ) : static_cast< Qt::ClipOperation >( hb_parni( 2 ) ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void setClipRect( int x, int y, int width, int height, Qt::ClipOperation operation = Qt::ReplaceClip )
*/
void QPainter_setClipRect2()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->setClipRect( PINT( 1 ), PINT( 2 ), PINT( 3 ), PINT( 4 ), HB_ISNIL( 5 ) ? static_cast< Qt::ClipOperation >( Qt::ReplaceClip ) : static_cast< Qt::ClipOperation >( hb_parni( 5 ) ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void setClipRect( const QRect & rectangle, Qt::ClipOperation operation = Qt::ReplaceClip )
*/
void QPainter_setClipRect3()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->setClipRect( *PQRECT( 1 ), HB_ISNIL( 2 ) ? static_cast< Qt::ClipOperation >( Qt::ReplaceClip ) : static_cast< Qt::ClipOperation >( hb_parni( 2 ) ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

HB_FUNC_STATIC( QPAINTER_SETCLIPRECT )
{
  if( ISBETWEEN( 1, 2 ) && ISQRECTF( 1 ) && ( HB_ISNUM( 2 ) || HB_ISNIL( 2 ) ) )
  {
    QPainter_setClipRect1();
  }
  else if( ISBETWEEN( 4, 5 ) && HB_ISNUM( 1 ) && HB_ISNUM( 2 ) && HB_ISNUM( 3 ) && HB_ISNUM( 4 ) && ( HB_ISNUM( 5 ) || HB_ISNIL( 5 ) ) )
  {
    QPainter_setClipRect2();
  }
  else if( ISBETWEEN( 1, 2 ) && ISQRECT( 1 ) && ( HB_ISNUM( 2 ) || HB_ISNIL( 2 ) ) )
  {
    QPainter_setClipRect3();
  }
  else
  {
    hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
  }
}

/*
void setClipRegion( const QRegion & region, Qt::ClipOperation operation = Qt::ReplaceClip )
*/
HB_FUNC_STATIC( QPAINTER_SETCLIPREGION )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISBETWEEN( 1, 2 ) && ISQREGION( 1 ) && ( HB_ISNUM( 2 ) || HB_ISNIL( 2 ) ) )
    {
#endif
      obj->setClipRegion( *PQREGION( 1 ), HB_ISNIL( 2 ) ? static_cast< Qt::ClipOperation >( Qt::ReplaceClip ) : static_cast< Qt::ClipOperation >( hb_parni( 2 ) ) );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void setClipping( bool enable )
*/
HB_FUNC_STATIC( QPAINTER_SETCLIPPING )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 1 ) && HB_ISLOG( 1 ) )
    {
#endif
      obj->setClipping( PBOOL( 1 ) );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void setCompositionMode( QPainter::CompositionMode mode )
*/
HB_FUNC_STATIC( QPAINTER_SETCOMPOSITIONMODE )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 1 ) && HB_ISNUM( 1 ) )
    {
#endif
      obj->setCompositionMode( static_cast<QPainter::CompositionMode>( hb_parni( 1 ) ) );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void setFont( const QFont & font )
*/
HB_FUNC_STATIC( QPAINTER_SETFONT )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 1 ) && ISQFONT( 1 ) )
    {
#endif
      obj->setFont( *PQFONT( 1 ) );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void setLayoutDirection( Qt::LayoutDirection direction )
*/
HB_FUNC_STATIC( QPAINTER_SETLAYOUTDIRECTION )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 1 ) && HB_ISNUM( 1 ) )
    {
#endif
      obj->setLayoutDirection( static_cast<Qt::LayoutDirection>( hb_parni( 1 ) ) );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void setOpacity( qreal opacity )
*/
HB_FUNC_STATIC( QPAINTER_SETOPACITY )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 1 ) && HB_ISNUM( 1 ) )
    {
#endif
      obj->setOpacity( PQREAL( 1 ) );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void setPen( const QPen & pen )
*/
void QPainter_setPen1()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->setPen( *PQPEN( 1 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void setPen( const QColor & color )
*/
void QPainter_setPen2()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->setPen( HB_ISOBJECT( 1 ) ? *static_cast< QColor * >( Qt5xHb::itemGetPtr( 1 ) ) : QColor( hb_parc( 1 ) ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void setPen( Qt::PenStyle style )
*/
void QPainter_setPen3()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->setPen( static_cast<Qt::PenStyle>( hb_parni( 1 ) ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

HB_FUNC_STATIC( QPAINTER_SETPEN )
{
  if( ISNUMPAR( 1 ) && ISQPEN( 1 ) )
  {
    QPainter_setPen1();
  }
  else if( ISNUMPAR( 1 ) && ( ISQCOLOR( 1 )|| HB_ISCHAR( 1 ) ) )
  {
    QPainter_setPen2();
  }
  else if( ISNUMPAR( 1 ) && HB_ISNUM( 1 ) )
  {
    QPainter_setPen3();
  }
  else
  {
    hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
  }
}

/*
void setRenderHint( QPainter::RenderHint hint, bool on = true )
*/
HB_FUNC_STATIC( QPAINTER_SETRENDERHINT )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISBETWEEN( 1, 2 ) && HB_ISNUM( 1 ) && ( HB_ISLOG( 2 ) || HB_ISNIL( 2 ) ) )
    {
#endif
      obj->setRenderHint( static_cast<QPainter::RenderHint>( hb_parni( 1 ) ), OPBOOL( 2, true ) );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void setRenderHints( QPainter::RenderHints hints, bool on = true )
*/
HB_FUNC_STATIC( QPAINTER_SETRENDERHINTS )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISBETWEEN( 1, 2 ) && HB_ISNUM( 1 ) && ( HB_ISLOG( 2 ) || HB_ISNIL( 2 ) ) )
    {
#endif
      obj->setRenderHints( static_cast<QPainter::RenderHints>( hb_parni( 1 ) ), OPBOOL( 2, true ) );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void setTransform( const QTransform & transform, bool combine = false )
*/
HB_FUNC_STATIC( QPAINTER_SETTRANSFORM )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISBETWEEN( 1, 2 ) && ISQTRANSFORM( 1 ) && ( HB_ISLOG( 2 ) || HB_ISNIL( 2 ) ) )
    {
#endif
      obj->setTransform( *PQTRANSFORM( 1 ), OPBOOL( 2, false ) );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void setViewTransformEnabled( bool enable )
*/
HB_FUNC_STATIC( QPAINTER_SETVIEWTRANSFORMENABLED )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 1 ) && HB_ISLOG( 1 ) )
    {
#endif
      obj->setViewTransformEnabled( PBOOL( 1 ) );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void setViewport( const QRect & rectangle )
*/
void QPainter_setViewport1()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->setViewport( *PQRECT( 1 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void setViewport( int x, int y, int width, int height )
*/
void QPainter_setViewport2()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->setViewport( PINT( 1 ), PINT( 2 ), PINT( 3 ), PINT( 4 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

HB_FUNC_STATIC( QPAINTER_SETVIEWPORT )
{
  if( ISNUMPAR( 1 ) && ISQRECT( 1 ) )
  {
    QPainter_setViewport1();
  }
  else if( ISNUMPAR( 4 ) && HB_ISNUM( 1 ) && HB_ISNUM( 2 ) && HB_ISNUM( 3 ) && HB_ISNUM( 4 ) )
  {
    QPainter_setViewport2();
  }
  else
  {
    hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
  }
}

/*
void setWindow( const QRect & rectangle )
*/
void QPainter_setWindow1()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->setWindow( *PQRECT( 1 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void setWindow( int x, int y, int width, int height )
*/
void QPainter_setWindow2()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->setWindow( PINT( 1 ), PINT( 2 ), PINT( 3 ), PINT( 4 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

HB_FUNC_STATIC( QPAINTER_SETWINDOW )
{
  if( ISNUMPAR( 1 ) && ISQRECT( 1 ) )
  {
    QPainter_setWindow1();
  }
  else if( ISNUMPAR( 4 ) && HB_ISNUM( 1 ) && HB_ISNUM( 2 ) && HB_ISNUM( 3 ) && HB_ISNUM( 4 ) )
  {
    QPainter_setWindow2();
  }
  else
  {
    hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
  }
}

/*
void setWorldMatrixEnabled( bool enable )
*/
HB_FUNC_STATIC( QPAINTER_SETWORLDMATRIXENABLED )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 1 ) && HB_ISLOG( 1 ) )
    {
#endif
      obj->setWorldMatrixEnabled( PBOOL( 1 ) );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void setWorldTransform( const QTransform & matrix, bool combine = false )
*/
HB_FUNC_STATIC( QPAINTER_SETWORLDTRANSFORM )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISBETWEEN( 1, 2 ) && ISQTRANSFORM( 1 ) && ( HB_ISLOG( 2 ) || HB_ISNIL( 2 ) ) )
    {
#endif
      obj->setWorldTransform( *PQTRANSFORM( 1 ), OPBOOL( 2, false ) );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void shear( qreal sh, qreal sv )
*/
HB_FUNC_STATIC( QPAINTER_SHEAR )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 2 ) && HB_ISNUM( 1 ) && HB_ISNUM( 2 ) )
    {
#endif
      obj->shear( PQREAL( 1 ), PQREAL( 2 ) );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void strokePath( const QPainterPath & path, const QPen & pen )
*/
HB_FUNC_STATIC( QPAINTER_STROKEPATH )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 2 ) && ISQPAINTERPATH( 1 ) && ISQPEN( 2 ) )
    {
#endif
      obj->strokePath( *PQPAINTERPATH( 1 ), *PQPEN( 2 ) );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
bool testRenderHint( QPainter::RenderHint hint ) const
*/
HB_FUNC_STATIC( QPAINTER_TESTRENDERHINT )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 1 ) && HB_ISNUM( 1 ) )
    {
#endif
      RBOOL( obj->testRenderHint( static_cast<QPainter::RenderHint>( hb_parni( 1 ) ) ) );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }
}

/*
const QTransform & transform() const
*/
HB_FUNC_STATIC( QPAINTER_TRANSFORM )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 0 ) )
    {
#endif
      const QTransform * ptr = &obj->transform();
      Qt5xHb::createReturnClass( ptr, "QTRANSFORM", false );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }
}

/*
void translate( const QPointF & offset )
*/
void QPainter_translate1()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->translate( *PQPOINTF( 1 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void translate( const QPoint & offset )
*/
void QPainter_translate2()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->translate( *PQPOINT( 1 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

/*
void translate( qreal dx, qreal dy )
*/
void QPainter_translate3()
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
    obj->translate( PQREAL( 1 ), PQREAL( 2 ) );
  }

  hb_itemReturn( hb_stackSelfItem() );
}

HB_FUNC_STATIC( QPAINTER_TRANSLATE )
{
  if( ISNUMPAR( 1 ) && ISQPOINTF( 1 ) )
  {
    QPainter_translate1();
  }
  else if( ISNUMPAR( 1 ) && ISQPOINT( 1 ) )
  {
    QPainter_translate2();
  }
  else if( ISNUMPAR( 2 ) && HB_ISNUM( 1 ) && HB_ISNUM( 2 ) )
  {
    QPainter_translate3();
  }
  else
  {
    hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
  }
}

/*
bool viewTransformEnabled() const
*/
HB_FUNC_STATIC( QPAINTER_VIEWTRANSFORMENABLED )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 0 ) )
    {
#endif
      RBOOL( obj->viewTransformEnabled() );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }
}

/*
QRect viewport() const
*/
HB_FUNC_STATIC( QPAINTER_VIEWPORT )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 0 ) )
    {
#endif
      auto ptr = new QRect( obj->viewport() );
      Qt5xHb::createReturnClass( ptr, "QRECT", true );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }
}

/*
QRect window() const
*/
HB_FUNC_STATIC( QPAINTER_WINDOW )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 0 ) )
    {
#endif
      auto ptr = new QRect( obj->window() );
      Qt5xHb::createReturnClass( ptr, "QRECT", true );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }
}

/*
bool worldMatrixEnabled() const
*/
HB_FUNC_STATIC( QPAINTER_WORLDMATRIXENABLED )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 0 ) )
    {
#endif
      RBOOL( obj->worldMatrixEnabled() );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }
}

/*
const QTransform & worldTransform() const
*/
HB_FUNC_STATIC( QPAINTER_WORLDTRANSFORM )
{
  auto obj = static_cast< QPainter * >( Qt5xHb::itemGetPtrStackSelfItem() );

  if( obj != nullptr )
  {
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    if( ISNUMPAR( 0 ) )
    {
#endif
      const QTransform * ptr = &obj->worldTransform();
      Qt5xHb::createReturnClass( ptr, "QTRANSFORM", false );
#ifndef QT5XHB_DONT_CHECK_PARAMETERS
    }
    else
    {
      hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
    }
#endif
  }
}

HB_FUNC_STATIC( QPAINTER_NEWFROM )
{
  PHB_ITEM self = hb_stackSelfItem();

  if( hb_pcount() == 1 && HB_ISOBJECT( 1 ) )
  {
    PHB_ITEM ptr = hb_itemPutPtr( nullptr, static_cast< void * >( hb_itemGetPtr( hb_objSendMsg( hb_param( 1, HB_IT_OBJECT ), "POINTER", 0 ) ) ) );
    hb_objSendMsg( self, "_pointer", 1, ptr );
    hb_itemRelease( ptr );
    PHB_ITEM des = hb_itemPutL( nullptr, false );
    hb_objSendMsg( self, "_self_destruction", 1, des );
    hb_itemRelease( des );
  }
  else if( hb_pcount() == 1 && HB_ISPOINTER( 1 ) )
  {
    PHB_ITEM ptr = hb_itemPutPtr( nullptr, static_cast< void * >( hb_itemGetPtr( hb_param( 1, HB_IT_POINTER ) ) ) );
    hb_objSendMsg( self, "_pointer", 1, ptr );
    hb_itemRelease( ptr );
    PHB_ITEM des = hb_itemPutL( nullptr, false );
    hb_objSendMsg( self, "_self_destruction", 1, des );
    hb_itemRelease( des );
  }
  else
  {
    hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
  }

  hb_itemReturn( self );
}

HB_FUNC_STATIC( QPAINTER_NEWFROMOBJECT )
{
  HB_FUNC_EXEC( QPAINTER_NEWFROM );
}

HB_FUNC_STATIC( QPAINTER_NEWFROMPOINTER )
{
  HB_FUNC_EXEC( QPAINTER_NEWFROM );
}

HB_FUNC_STATIC( QPAINTER_SELFDESTRUCTION )
{
  hb_retl( static_cast< bool >( hb_itemGetL( hb_objSendMsg( hb_stackSelfItem(), "SELF_DESTRUCTION", 0 ) ) ) );
}

HB_FUNC_STATIC( QPAINTER_SETSELFDESTRUCTION )
{
  PHB_ITEM self = hb_stackSelfItem();

  if( hb_pcount() == 1 && HB_ISLOG( 1 ) )
  {
    PHB_ITEM des = hb_itemPutL( nullptr, hb_parl( 1 ) );
    hb_objSendMsg( self, "_self_destruction", 1, des );
    hb_itemRelease( des );
  }
  else
  {
    hb_errRT_BASE( EG_ARG, 3012, nullptr, HB_ERR_FUNCNAME, HB_ERR_ARGS_BASEPARAMS );
  }

  hb_itemReturn( self );
}

#pragma ENDDUMP
